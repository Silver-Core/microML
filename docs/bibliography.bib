@book{Harper:2012:PFP:2431407,
 author = {Harper, Professor Robert},
 title = {Practical Foundations for Programming Languages},
 year = {2012},
 isbn = {1107029570, 9781107029576},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@book{Appel:1997:MCI:248430,
 author = {Appel, Andrew W.},
 title = {Modern Compiler Implementation in ML: Basic Techniques},
 year = {1997},
 isbn = {0-521-58775-1},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@book{torc,
    author={Torczon, Linda and Keith Cooper},
    title={Engineering A Compiler},
    publisher={Morgan Kaufmann},
    year=2007
}

@book{spj1,
   author={Peyton Jones, Simon L and David R Lester},
   title={Implementing Functional Languages: a tutorial},
   publisher={self-published},
   year=2000
}

@book{spj2,
    author={Peyton Jones, Simon L},
    title={The Implementation of Functional Programming Languages},
    publisher={Prentice Hall},
    address={Hemel Hempstead},
    year=1987
}

@book{rwh,
 author = {O'Sullivan, Bryan and Goerzen, John and Stewart, Don},
 title = {Real World Haskell},
 year = {2008},
 isbn = {0596514980, 9780596514983},
 edition = {1st},
 publisher = {O'Reilly Media, Inc.},
} 

@book{plp,
    author={Scott, Michael L},
    title={Programming Language Pragmatics, Fouth Edition},
    publisher={Morgan Kaufmann},
    address={Waltham, MA},
    year=2016
}

@InProceedings{frob,  
    author ={John Peterson and Paul Hudak and Conal Elliott},  
    title = {Lambda in Motion: Controlling Robots with Haskell},  
    booktitle = {First International Workshop on Practical Aspects of Declarative Languages~(PADL)},  
    year=1999,  
    month = {January}
} 

@inproceedings{adams2012layout,
  author = {Adams, Michael D.},
  title = {Principled Parsing for Indentation-Sensitive Languages: Revisiting {L}andin's Offside Rule},
  booktitle = {Proceedings of the 40th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {511--522},
  year = {2013},
  series = {POPL~'13},
  address = {New York, NY, USA},
  publisher = {ACM},
  isbn = {978-1-4503-1832-7},
  doi = {10.1145/2429069.2429129},
}

@Inbook{deGroote1995,
author="de Groote, Philippe",
editor="Dezani-Ciancaglini, Mariangiola
and Plotkin, Gordon",
title="A simple calculus of exception handling",
bookTitle="Typed Lambda Calculi and Applications: Second International Conference on Typed Lambda Calculi and Applications, TLCA '95 Edinburgh, United Kingdom, April 10--12, 1995 Proceedings",
year="1995",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="201--215",
isbn="978-3-540-49178-1",
doi="10.1007/BFb0014054",
url="http://dx.doi.org/10.1007/BFb0014054"
}

@book{Pierce:2002:TPL:509043,
 author = {Pierce, Benjamin C.},
 title = {Types and Programming Languages},
 year = {2002},
 isbn = {0262162091, 9780262162098},
 edition = {1st},
 publisher = {The MIT Press},
} 

@inproceedings{Afshari:2012:LPP:2384592.2384595,
 author = {Afshari, Mehrdad and Barr, Earl T. and Su, Zhendong},
 title = {Liberating the Programmer with Prorogued Programming},
 booktitle = {Proceedings of the ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
 series = {Onward! 2012},
 year = {2012},
 isbn = {978-1-4503-1562-3},
 location = {Tucson, Arizona, USA},
 pages = {11--26},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2384592.2384595},
 doi = {10.1145/2384592.2384595},
 acmid = {2384595},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {executable refinement, human computation, hybrid computation, managing concerns, prorogued programming, workflow improvement},
} 

@article{Tofte:2004:RRM:993034.993040,
 author = {Tofte, Mads and Birkedal, Lars and Elsman, Martin and Hallenberg, Niels},
 title = {A Retrospective on Region-Based Memory Management},
 journal = {Higher Order Symbol. Comput.},
 issue_date = {September 2004},
 volume = {17},
 number = {3},
 month = sep,
 year = {2004},
 issn = {1388-3690},
 pages = {245--265},
 numpages = {21},
 url = {http://dx.doi.org/10.1023/B:LISP.0000029446.78563.a4},
 doi = {10.1023/B:LISP.0000029446.78563.a4},
 acmid = {993040},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Standard ML, dynamic storage management, regions},
}

@article{Tofte:1998:RIA:291891.291894,
 author = {Tofte, Mads and Birkedal, Lars},
 title = {A Region Inference Algorithm},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {July 1998},
 volume = {20},
 number = {4},
 month = jul,
 year = {1998},
 issn = {0164-0925},
 pages = {724--767},
 numpages = {44},
 url = {http://doi.acm.org/10.1145/291891.291894},
 doi = {10.1145/291891.291894},
 acmid = {291894},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {regions, standard ML},
}

@incollection{Barendregt:1993:LCT:162552.162561,
 author = {Barendregt, H. P.},
 chapter = {Lambda Calculi with Types},
 title = {Handbook of Logic in Computer Science (Vol. 2)},
 editor = {Abramsky, S. and Gabbay, Dov M. and Maibaum, S. E.},
 year = {1992},
 isbn = {0-19-853761-1},
 pages = {117--309},
 numpages = {193},
 url = {http://dl.acm.org/citation.cfm?id=162552.162561},
 acmid = {162561},
 publisher = {Oxford University Press, Inc.},
 address = {New York, NY, USA},
} 

@book{Lipovaca:2011:LYH:2018642,
 author = {Lipovaca, Miran},
 title = {Learn You a Haskell for Great Good!: A Beginner's Guide},
 year = {2011},
 isbn = {1593272839, 9781593272838},
 edition = {1st},
 publisher = {No Starch Press},
 address = {San Francisco, CA, USA},
}

@misc{scheme,
    author= {Tang, Jonathan},
    title= {Write yourself a Scheme in 48 hours},
    publisher={https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours}
}

@misc{diehl,
    author = {Diehl, Stephen},
    title = {Write you a Haskell},
    publisher = {http://dev.stephendiehl.com/fun/},
}

@misc{algoW,
    author = {Martin Grabmuller},
    title = {Algorithm W},
    publisher = {https://github.com/mgrabmueller/AlgorithmW/blob/master/AlgorithmW.lhs},
}

@misc{transformers,
    author = {Martin Grabmuller},
    title = {Transformers Step By Step},
    publisher = {https://github.com/mgrabmueller/TransformersStepByStep},
}

@book{Pierce:2004:ATT:1076265,
 author = {Pierce, Benjamin C.},
 title = {Advanced Topics in Types and Programming Languages},
 year = {2004},
 isbn = {0262162288},
 publisher = {The MIT Press},
}

@book{ 9780511608865,
author = "J. Roger Hindley",
title = {Basic Simple Type Theory}, 
publisher = {Cambridge University Press}, 
year = {1997},
isbn = {9780511608865}, 
note = {Cambridge Books Online}, 
url = {http://dx.doi.org/10.1017/CBO9780511608865}
}

@book{opac-b1078351,
   title = "Categories for the working mathematician",
   author = "Mac Lane, Saunders",
   series = "Graduate texts in mathematics",
   publisher = "Springer-Verlag",
   address = "New York",
   url = "http://opac.inria.fr/record=b1078351",
   isbn = "0-387-90036-5",
   year = 1971
}

@book{Abelson:1996:SIC:547755,
 author = {Abelson, Harold and Sussman, Gerald J.},
 title = {Structure and Interpretation of Computer Programs},
 year = {1996},
 isbn = {0262011530},
 edition = {2nd},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@book{Friedman1900,
    author = "Friedman and Felleisen",
    title = "The little schemer",
    keywords = "book.computers"
}

@inproceedings{Wadler:1995:MFP:647698.734146,
 author = {Wadler, Philip},
 title = {Monads for Functional Programming},
 booktitle = {Advanced Functional Programming, First International Spring School on Advanced Functional Programming Techniques-Tutorial Text},
 year = {1995},
 isbn = {3-540-59451-5},
 pages = {24--52},
 numpages = {29},
 url = {http://dl.acm.org/citation.cfm?id=647698.734146},
 acmid = {734146},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 

@article{TUR79a,
    author = {Turner, D.},
    citeulike-article-id = {2765535},
    journal = {Software-Practice and Experience},
    keywords = {rcb-bibfile},
    pages = {31--49},
    posted-at = {2008-05-07 12:57:49},
    priority = {2},
    title = {{A New Implementation Technique for Applicative Languages}},
    volume = {9},
    year = {1979}
}


@article{citeulike:2570403,
    abstract = {{Did you ever wonder how Y works and how anyone could ever have thought of it? Do you feel like a Lisp weakling when some heavy-duty Scheme hacker kicks sand in your face by admiring Y in public? In this note I'll try to explain to you not only how it works, but how someone could have invented it. I'll use Scheme notation because it is easier to understand when functions passed as arguments are being applied. At the end, I'll show you Common Lisp equivalents of some of the Scheme code.}},
    address = {New York, NY, USA},
    author = {Gabriel, Richard P.},
    citeulike-article-id = {2570403},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1317250.1317252},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1317250.1317252},
    doi = {10.1145/1317250.1317252},
    issn = {1045-3563},
    journal = {SIGPLAN Lisp Pointers},
    keywords = {calculus, lambda},
    number = {2},
    pages = {15--25},
    posted-at = {2010-05-05 09:04:55},
    priority = {2},
    publisher = {ACM},
    title = {{The why of Y}},
    url = {http://dx.doi.org/10.1145/1317250.1317252},
    volume = {2},
    year = {1988}
}

@MISC{Marlow_haskell2010,
    author = {Simon Marlow},
    title = {Haskell 2010 Language Report},
    year = {}
}

@techreport{958,
author = {Simon Thompson},
title = {{Regular Expressions and Automata using Haskell}},
month = {January},
year = {2000},
pages = {182-196},
keywords = {determinacy analysis, Craig interpolants},
note = {},
doi = {},
url = {http://www.cs.kent.ac.uk/pubs/2000/958},
    institution = {Computing Laboratory, University of Kent},
    number = {5-00},
    publication_type = {techreport},
    submission_id = {23260_948360512},
    type = {Technical Report},
}

@inproceedings{Steele:1994:BIC:174675.178068,
 author = {Steele,Jr., Guy L.},
 title = {Building Interpreters by Composing Monads},
 booktitle = {Proceedings of the 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '94},
 year = {1994},
 isbn = {0-89791-636-0},
 location = {Portland, Oregon, USA},
 pages = {472--492},
 numpages = {21},
 url = {http://doi.acm.org/10.1145/174675.178068},
 doi = {10.1145/174675.178068},
 acmid = {178068},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@TechReport{leijen2001, 
   Author = {Leijen, Daan},
   Title = {Parsec, a fast combinator parser},
   Number = {35},
   Institution = {Department of Computer Science, University of Utrecht (RUU)},
   Month = {October},
   Year = {2001}
} 

@book{opac-b1081362,
   title = "Type theory and functional programming",
   author = "Thompson, Simon",
   series = "International computer science series",
   publisher = "Addison-Wesley",
   address = "Wokingham (GB)",
   url = "http://opac.inria.fr/record=b1081362",
   isbn = "0-201-41667-0",
   year = 1991
}

@techreport{citeulike:3760678,
    abstract = {{This Standard defines the ECMAScript scripting language. ECMAScript is an object-oriented programming language for performing computations and manipulating computational objects within a host environment. ECMAScript as defined here is not intended to be computationally self-sufficient; indeed, there are no provisions in this specification for input of external data or output of computed results. Instead, it is expected that the computational environment of an ECMAScript program will provide not only the objects and other facilities described in this specification but also certain environment-specific host objects, whose description and behaviour are beyond the scope of this specification except to indicate that they may provide certain properties that can be accessed and certain functions that can be called from an ECMAScript program. ECMAScript was originally designed to be a Web scripting language, providing a mechanism to enliven Web pages in browsers and to perform server computation as part of a Web-based client-server architecture. ECMAScript can provide core scripting capabilities for a variety of host environments, and therefore the core scripting language is specified in this document apart from any particular host environment.}},
    citeulike-article-id = {3760678},
    citeulike-linkout-0 = {http://www.ecma-international.org/publications/standards/Ecma-262.htm},
    keywords = {html, javascript, slicefactory, standard},
    organization = {ECMA},
    posted-at = {2008-12-09 16:25:44},
    priority = {2},
    title = {{ECMAScript Language Specification (Standard ECMA-262)}},
    url = {http://www.ecma-international.org/publications/standards/Ecma-262.htm}
}
